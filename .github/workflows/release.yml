name: Release

on:
  push:
    tags:
      - 'v[0-9]+.*'

jobs:
  create-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # 必需：允许 gh 创建 release
    steps:
      - name: Create Draft Release
        run: |
          gh release create ${{ github.ref_name }} \
            --draft \
            --title "Release ${{ github.ref_name }}" \
            --notes "Draft release for ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    name: Build and Upload Assets
    needs: create-release
    permissions:
      contents: write # 必需：允许 gh 上传附件
    strategy:
      matrix:
        include:
          # 1. Linux (x86_64-unknown-linux-gnu)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin_name: "aliyuncli" # <--- !!修改这里!!
            asset_name: "aliyuncli-linux-x86_64"

          # 2. Windows (x86_64-pc-windows-msvc)
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin_name: "aliyuncli.exe" # <--- !!修改这里!!
            asset_name: "aliyuncli-windows-x86_64.exe"

          # 3. macOS M-series (aarch64-apple-darwin)
          - os: macos-latest
            target: aarch64-apple-darwin
            bin_name: "aliyuncli" # <--- !!修改这里!!
            asset_name: "aliyuncli-macos-aarch64"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact path
        id: set-path
        run: echo "artifact_path=target/${{ matrix.target }}/release/${{ matrix.bin_name }}" >> $GITHUB_OUTPUT
        shell: bash
      
      # (推荐) 重命名文件，使其在Release页面上更清晰
      - name: Rename artifact (Linux/macOS)
        if: runner.os != 'Windows'
        run: mv ${{ steps.set-path.outputs.artifact_path }} ${{ matrix.asset_name }}
        shell: bash

      - name: Rename artifact (Windows)
        if: runner.os == 'Windows'
        run: mv ${{ steps.set-path.outputs.artifact_path }} ${{ matrix.asset_name }}
        shell: pwsh

      - name: Upload Release Asset
        run: gh release upload ${{ github.ref_name }} ${{ matrix.asset_name }} --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-release:
    name: Publish Release
    needs: [create-release, build-and-upload]
    runs-on: ubuntu-latest
    permissions:
      contents: write # 必需：允许 gh 编辑 release（将其从草稿变为发布）
    steps:
      - name: Publish Release
        run: gh release edit ${{ github.ref_name }} --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
